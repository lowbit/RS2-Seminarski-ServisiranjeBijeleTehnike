// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SBT.WebAPI.Database;

namespace SBT.WebAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210319223550_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SBT.WebAPI.Database.Kategorije", b =>
                {
                    b.Property<int>("KategorijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KategorijaId");

                    b.ToTable("Kategorije");
                });

            modelBuilder.Entity("SBT.WebAPI.Database.Korisnici", b =>
                {
                    b.Property<int>("KorisnikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KorisnickoIme")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LozinkaHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LozinkaSalt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Slika")
                        .HasColumnType("varbinary(max)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.HasKey("KorisnikId");

                    b.ToTable("Korisnici");
                });

            modelBuilder.Entity("SBT.WebAPI.Database.KorisniciUloge", b =>
                {
                    b.Property<int>("KorisnikUlogaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumIzmjene")
                        .HasColumnType("datetime2");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<int>("UlogaId")
                        .HasColumnType("int");

                    b.HasKey("KorisnikUlogaId");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("UlogaId");

                    b.ToTable("KorisniciUloge");
                });

            modelBuilder.Entity("SBT.WebAPI.Database.Proizvodjaci", b =>
                {
                    b.Property<int>("ProizvodjacId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProizvodjacId");

                    b.ToTable("Proizvodjaci");
                });

            modelBuilder.Entity("SBT.WebAPI.Database.Servisi", b =>
                {
                    b.Property<int>("ServisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Cijena")
                        .HasColumnType("float");

                    b.Property<DateTime>("DatumServisa")
                        .HasColumnType("datetime2");

                    b.Property<int>("KlijentId")
                        .HasColumnType("int");

                    b.Property<int>("OcjenaServisa")
                        .HasColumnType("int");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ServiserId")
                        .HasColumnType("int");

                    b.Property<int>("StatusServisaId")
                        .HasColumnType("int");

                    b.Property<int>("TipDostaveId")
                        .HasColumnType("int");

                    b.Property<int>("TipPlacanjaId")
                        .HasColumnType("int");

                    b.Property<int>("UredjajId")
                        .HasColumnType("int");

                    b.HasKey("ServisId");

                    b.HasIndex("KlijentId");

                    b.HasIndex("ServiserId");

                    b.HasIndex("StatusServisaId");

                    b.HasIndex("TipDostaveId");

                    b.HasIndex("TipPlacanjaId");

                    b.HasIndex("UredjajId");

                    b.ToTable("Servisi");
                });

            modelBuilder.Entity("SBT.WebAPI.Database.SlikeUredjaja", b =>
                {
                    b.Property<int>("SlikaUredjajaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Slika")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("UredjajId")
                        .HasColumnType("int");

                    b.HasKey("SlikaUredjajaId");

                    b.HasIndex("UredjajId");

                    b.ToTable("SlikeUredjaja");
                });

            modelBuilder.Entity("SBT.WebAPI.Database.StanjeServisa", b =>
                {
                    b.Property<int>("StanjeServisaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Azurirano")
                        .HasColumnType("datetime2");

                    b.Property<string>("Napomena")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ServisId")
                        .HasColumnType("int");

                    b.Property<int>("StatusServisaId")
                        .HasColumnType("int");

                    b.HasKey("StanjeServisaId");

                    b.HasIndex("ServisId");

                    b.HasIndex("StatusServisaId");

                    b.ToTable("StanjeServisa");
                });

            modelBuilder.Entity("SBT.WebAPI.Database.StatusServisa", b =>
                {
                    b.Property<int>("StatusServisaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StatusServisaId");

                    b.ToTable("StatusServisa");
                });

            modelBuilder.Entity("SBT.WebAPI.Database.TipDostave", b =>
                {
                    b.Property<int>("TipDostaveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipDostaveId");

                    b.ToTable("TipDostave");
                });

            modelBuilder.Entity("SBT.WebAPI.Database.TipPlacanja", b =>
                {
                    b.Property<int>("TipPlacanjaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipPlacanjaId");

                    b.ToTable("TipPlacanja");
                });

            modelBuilder.Entity("SBT.WebAPI.Database.Uloge", b =>
                {
                    b.Property<int>("UlogaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UlogaId");

                    b.ToTable("Uloge");
                });

            modelBuilder.Entity("SBT.WebAPI.Database.Uredjaji", b =>
                {
                    b.Property<int>("UredjajId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("KategorijaId")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProizvodjacId")
                        .HasColumnType("int");

                    b.HasKey("UredjajId");

                    b.HasIndex("KategorijaId");

                    b.HasIndex("ProizvodjacId");

                    b.ToTable("Uredjaji");
                });

            modelBuilder.Entity("SBT.WebAPI.Database.KorisniciUloge", b =>
                {
                    b.HasOne("SBT.WebAPI.Database.Korisnici", "Korisnik")
                        .WithMany("KorisniciUloge")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK_KorisniciUloge_Korisnici")
                        .IsRequired();

                    b.HasOne("SBT.WebAPI.Database.Uloge", "Uloga")
                        .WithMany("KorisniciUloge")
                        .HasForeignKey("UlogaId")
                        .HasConstraintName("FK_KorisniciUloge_Uloge")
                        .IsRequired();
                });

            modelBuilder.Entity("SBT.WebAPI.Database.Servisi", b =>
                {
                    b.HasOne("SBT.WebAPI.Database.Korisnici", "Klijent")
                        .WithMany()
                        .HasForeignKey("KlijentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SBT.WebAPI.Database.Korisnici", "Serviser")
                        .WithMany()
                        .HasForeignKey("ServiserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SBT.WebAPI.Database.StatusServisa", "Status")
                        .WithMany()
                        .HasForeignKey("StatusServisaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SBT.WebAPI.Database.TipDostave", "TipDostave")
                        .WithMany()
                        .HasForeignKey("TipDostaveId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SBT.WebAPI.Database.TipPlacanja", "TipPlacanja")
                        .WithMany()
                        .HasForeignKey("TipPlacanjaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SBT.WebAPI.Database.Uredjaji", "Uredjaj")
                        .WithMany()
                        .HasForeignKey("UredjajId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("SBT.WebAPI.Database.SlikeUredjaja", b =>
                {
                    b.HasOne("SBT.WebAPI.Database.Uredjaji", "Uredjaj")
                        .WithMany("SlikeUredjaja")
                        .HasForeignKey("UredjajId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("SBT.WebAPI.Database.StanjeServisa", b =>
                {
                    b.HasOne("SBT.WebAPI.Database.Servisi", "Servis")
                        .WithMany("StanjeServisa")
                        .HasForeignKey("ServisId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SBT.WebAPI.Database.StatusServisa", "TrenutniStatus")
                        .WithMany()
                        .HasForeignKey("StatusServisaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("SBT.WebAPI.Database.Uredjaji", b =>
                {
                    b.HasOne("SBT.WebAPI.Database.Kategorije", "Kategorija")
                        .WithMany("Uredjaji")
                        .HasForeignKey("KategorijaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SBT.WebAPI.Database.Proizvodjaci", "Proizvodjac")
                        .WithMany()
                        .HasForeignKey("ProizvodjacId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
